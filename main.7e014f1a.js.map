{"version":3,"sources":["scripts/main.js"],"names":["messages","document","querySelectorAll","messageLose","querySelector","messageWin","button","cells","table","score","tableGame","addEventListener","classList","contains","remove","add","textContent","i","length","j","map","message","cell","className","addCell","render","blur","e","copyTableGame","JSON","parse","stringify","key","moveUp","moveLeft","moveDown","moveRight","some","endH","endV","r","c","row","every","randomNumber","resultValue","Math","floor","random","randomRow","randomCell","rows","filterRow","filter","move","line","push","moveHorizontal","isReversed","reverse","moveVertical"],"mappings":"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","file":"main.7e014f1a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst messages = document.querySelectorAll('.message');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst button = document.querySelector('.button');\nconst cells = document.querySelectorAll('.field-cell');\nconst table = document.querySelector('.game-field');\nconst score = document.querySelector('.game-score');\n\nconst tableGame = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nbutton.addEventListener('click', () => {\n  if (!button.classList.contains('restart')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n  }\n\n  for (let i = 0; i < tableGame.length; i++) {\n    for (let j = 0; j < tableGame[i].length; j++) {\n      tableGame[i][j] = 0;\n    }\n  }\n\n  [...messages].map(message => message.classList.add('hidden'));\n  score.textContent = 0;\n\n  [...cells].map(cell => {\n    cell.className = 'field-cell';\n    cell.textContent = '';\n  });\n\n  addCell();\n  addCell();\n  render();\n  button.blur();\n});\n\ndocument.addEventListener('keydown', e => {\n  if (!button.classList.contains('restart')\n    || !messageLose.classList.contains('hidden')\n    || !messageWin.classList.contains('hidden')) {\n    return;\n  }\n\n  const copyTableGame = JSON.parse(JSON.stringify(tableGame));\n\n  switch (e.key) {\n    case 'w':\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'a':\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 's':\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    case 'd':\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    default:\n      return;\n  }\n\n  if (JSON.stringify(copyTableGame) === JSON.stringify(tableGame)) {\n    return;\n  }\n\n  addCell();\n  render();\n\n  if ([...cells].some(cell => cell.classList.contains('field-cell--2048'))) {\n    messageWin.classList.remove('hidden');\n  }\n\n  let endH = true;\n  let endV = true;\n\n  for (let r = 0; r < tableGame.length; r++) {\n    for (let c = 0; c < tableGame.length - 1; c++) {\n      if (tableGame[r][c] === tableGame[r][c + 1]) {\n        endH = false;\n\n        return;\n      }\n    }\n  }\n\n  for (let r = 0; r < tableGame.length; r++) {\n    const row = [\n      tableGame[0][r], tableGame[1][r], tableGame[2][r], tableGame[3][r],\n    ];\n\n    for (let c = 0; c < row.length - 1; c++) {\n      if (row[c] === row[c + 1]) {\n        endV = false;\n\n        return;\n      }\n    }\n  }\n\n  if (\n    tableGame.every(row => row.every(cell => cell !== 0))\n    && endV === true\n    && endH === true\n  ) {\n    messageLose.classList.remove('hidden');\n  }\n});\n\nconst randomNumber = () => {\n  let resultValue = 2;\n  const number = Math.floor(Math.random() * 10);\n\n  if (number === 0) {\n    resultValue = 4;\n  }\n\n  return resultValue;\n};\n\nconst addCell = () => {\n  let randomRow = Math.floor(Math.random() * 4);\n  let randomCell = Math.floor(Math.random() * 4);\n\n  while (tableGame[randomRow][randomCell] !== 0) {\n    randomRow = Math.floor(Math.random() * 4);\n    randomCell = Math.floor(Math.random() * 4);\n  }\n\n  tableGame[randomRow][randomCell] = randomNumber();\n};\n\nconst render = () => {\n  for (let i = 0; i < tableGame.length; i++) {\n    const row = table.rows[i];\n\n    for (let j = 0; j < tableGame[i].length; j++) {\n      const cell = row.cells[j];\n\n      cell.className = 'field-cell';\n      cell.textContent = '';\n\n      if (tableGame[i][j] !== 0) {\n        cell.classList.add(`field-cell--${tableGame[i][j]}`);\n        cell.textContent = tableGame[i][j];\n      }\n    }\n  }\n};\n\nconst filterRow = (row) => {\n  return row.filter(cell => cell !== 0);\n};\n\nconst move = (row) => {\n  let line = filterRow(row);\n\n  for (let j = 0; j < line.length - 1; j++) {\n    if (line[j] === line[j + 1]) {\n      line[j] *= 2;\n      line[j + 1] = 0;\n      score.textContent = +score.textContent + +line[j];\n    }\n  }\n\n  line = filterRow(line);\n\n  while (line.length < tableGame.length) {\n    line.push(0);\n  }\n\n  return line;\n};\n\nconst moveHorizontal = (isReversed) => {\n  for (let i = 0; i < tableGame.length; i++) {\n    let row = tableGame[i];\n\n    isReversed && row.reverse();\n    row = move(row);\n    isReversed && row.reverse();\n    tableGame[i] = row;\n  }\n};\n\nconst moveVertical = (isReversed) => {\n  for (let i = 0; i < tableGame.length; i++) {\n    let row = [\n      tableGame[0][i], tableGame[1][i], tableGame[2][i], tableGame[3][i],\n    ];\n\n    isReversed && row.reverse();\n    row = move(row);\n    isReversed && row.reverse();\n    tableGame[0][i] = row[0];\n    tableGame[1][i] = row[1];\n    tableGame[2][i] = row[2];\n    tableGame[3][i] = row[3];\n  }\n};\n\nconst moveLeft = () => {\n  moveHorizontal();\n};\n\nconst moveRight = () => {\n  moveHorizontal(true);\n};\n\nconst moveUp = () => {\n  moveVertical();\n};\n\nconst moveDown = () => {\n  moveVertical(true);\n};\n"]}